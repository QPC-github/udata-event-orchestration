# depends on docker-compose-shared.yml

version: "3.8"
services:
  hydra-consumer:
    build:
      context: .
      dockerfile: dockerfiles/hydra/Dockerfile.hydra.with.pypi
    env_file:
      - ./config/.env.hydra
    depends_on:
      hydra-postgres:
        condition: service_healthy
      broker:
        condition: service_healthy
    container_name: hydra-consumer
    entrypoint: udata-hydra run-kafka-integration

  hydra-crawler:
    build:
      context: .
      dockerfile: dockerfiles/hydra/Dockerfile.hydra.with.pypi
    env_file:
      - ./config/.env.hydra
    depends_on:
      hydra-postgres:
        condition: service_healthy
    container_name: hydra-crawler
    entrypoint: udata-hydra-crawl

  analysis-consumer:
    build:
      context: .
      dockerfile: dockerfiles/analysis/Dockerfile.analysis.with.pypi
    env_file:
      - ./config/.env.analysis
    container_name: analysis-consumer
    entrypoint: udata-analysis-service consume
    depends_on:
      broker:
        condition: service_healthy

  analysis-worker:
    build:
      context: .
      dockerfile: dockerfiles/analysis/Dockerfile.analysis.with.pypi
    env_file:
      - ./config/.env.analysis
    container_name: analysis-worker
    entrypoint: udata-analysis-service work

  csvapi-server:
    build:
      context: .
      # No pypi yet for csvapi
      dockerfile: dockerfiles/csvapi/Dockerfile.csvapi.with.source
    env_file:
      - ./config/.env.csvapi
    ports:
      - 8000:8000
    container_name: csvapi-server
    volumes:
      - ./csvapi/dbs:/app/dbs
    entrypoint: csvapi serve -h 0.0.0.0 -p 8000

  csvapi-consumer:
    build:
      context: .
      # No pypi yet for csvapi
      dockerfile: dockerfiles/csvapi/Dockerfile.csvapi.with.source
    env_file:
      - ./config/.env.csvapi
    container_name: csvapi-consumer
    volumes:
      - ./csvapi/dbs:/app/dbs
    entrypoint: csvapi consume
    depends_on:
      broker:
        condition: service_healthy
