version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_ADVERTISED_HOST_NAME: 'broker'

  minio:
    hostname: minio
    image: 'minio/minio:RELEASE.2021-01-08T21-18-21Z'
    container_name: minio
    ports:
      - '9000:9000'
    volumes:
      - ./minio-data:/data
    environment:
      MINIO_ACCESS_KEY: geoffrey
      MINIO_SECRET_KEY: geoffrey
    command: server /data

  hydra-consumer:
    build:
      context: .
      dockerfile: Dockerfile.hydra.consumer
    env_file:
      - .env.hydra
    container_name: hydra-consumer

  hydra-postgres:
    image: postgres
    container_name: hydra-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres

  hydra-crawler:
    build:
      context: .
      dockerfile: Dockerfile.hydra.crawler
    env_file:
      - .env.hydra
    depends_on:
      - hydra-postgres
    container_name: hydra-crawler

  hydra-redis:
    image: redis:latest
    container_name: hydra-redis
    command: ["redis-server", "--bind", "0.0.0.0", "--port", "6380"]

  analysis-consumer:
    build:
      context: .
      dockerfile: Dockerfile.analysis.consumer
    env_file:
      - .env.analysis
    container_name: analysis-consumer

  analysis-worker:
    build:
      context: .
      dockerfile: Dockerfile.analysis.worker
    env_file:
      - .env.analysis
    container_name: analysis-worker

  analysis-redis:
    image: redis:latest
    container_name: analysis-redis
    command: ["redis-server", "--bind", "0.0.0.0", "--port", "6380"]
